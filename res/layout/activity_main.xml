<!-- 这里定义为auto，在ToolBar中就可以自定义的添加toolbar：title之类的属性，就像在Activity中效果一样 -->
<RelativeLayout xmlns:android="http://schemas.android.com/apk/res/android"
    xmlns:tools="http://schemas.android.com/tools"
    xmlns:toolbar="http://schemas.android.com/apk/res-auto"
    xmlns:app="http://schemas.android.com/apk/res/com.example.mytoolbar"
    android:layout_width="match_parent"
    android:layout_height="match_parent"
    android:background="#cccccc"
    tools:context="com.example.mytoolbar.MainActivity" >
<!-- Toolbar本身是一个ViewGroup，所以在里面添加相应的TextView或其他，
颜色数值写成attr属性，这样做是为了屏蔽开发者对应具体数值，比如我们需要设置不同主题下的主色，副色，
或者是不同版本的ActionBar大小，亦或者是不同Dpi下的DrawerLayout的宽度等
app:popupTheme引用了在Styles中设定的主题 -->
    <android.support.v7.widget.Toolbar
        android:id="@+id/toolbar"
        android:layout_width="match_parent"
        android:layout_height="?attr/actionBarSize"
        android:background="?attr/colorPrimary"
        app:popupTheme="@style/OverflowMenuStyle"
        toolbar:title="Title"
        toolbar:titleTextColor="#ffffff" >

        <TextView
            android:layout_width="wrap_content"
            android:layout_height="wrap_content"
            android:layout_gravity="center"
            android:text="MyToolBar"
            android:textColor="#ffffff" />
    </android.support.v7.widget.Toolbar>
<!-- 这个ImageView是Activity中PopupMenu中用的，设置侦听，弹出相应的菜单，对应Activity中被注释掉的代码
但这种方法无法方便的与ToolBar中Menu菜单联系，较容易的修改相应的背景属性，而舍弃 -->
    <!--
         <ImageView
        android:id="@+id/more"
        android:layout_width="wrap_content"
        android:layout_height="?attr/actionBarSize"
        android:layout_alignParentRight="true"
        android:onClick="popupmenu"
        android:scaleType="center"
        android:src="@drawable/common_forward_normal" />
    -->

    <TextView
        android:layout_width="wrap_content"
        android:layout_height="wrap_content"
        android:layout_below="@+id/toolbar"
        android:text="@string/hello_world"
        android:textColor="#000000" />

</RelativeLayout>